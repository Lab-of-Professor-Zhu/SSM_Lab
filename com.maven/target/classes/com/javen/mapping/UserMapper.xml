<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.javen.dao.IUserDao" >
  <!-- <resultMap id="BaseResultMap" type="com.javen.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
  </resultMap>-->
  <!-- <sql id="Base_Column_List" >
    id, name, password
  </sql>  -->
  <!--注意这里的参数类型是parameterType而不是parameterMap，因为返回的是单个类型  -->
	<!-- <select id="findUserByNameAndPwd"  parameterType="map"  resultType="com.javen.model.User">
		select name,password from user where name=#{name} and password=#{password}
	</select> -->
	<!-- <insert id="addUser" parameterType="com.javen.model.User">
		insert into user(id,name,password) values(#{id},#{name},#{password})
	</insert> -->
	<!--执行增加操作的SQL语句。id和parameterType分别与IUserOperation接口中的addUser方法的名字和参数类型一致。 
		useGeneratedKeys设置为"true"表明要MyBatis获取由数据库自动生成的主键； keyProperty="id"指定把获取到的主键值注入到User的id属性 -->
	<!-- <insert id="addUser" parameterType="com.javen.model.User"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		user(name,password) values(#{name},#{password})
	</insert> -->
	<!--增加用户名和密码进行注册  -->
    <insert id="addUser" >
         insert into user (name,password)
        values (#{name},#{password})
    </insert>
     <!-- 查询用户和密码进行登录 -->
	<select id="findUserByNameAndPwd"  parameterType="com.javen.model.User"  resultType="com.javen.model.User">
		select name,password from user where name=#{name}and password=#{password}
		
	</select>
	
	
  <!-- <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select> -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!-- <insert id="insert" parameterType="com.javen.model.User" >
    insert into user (id, user_name, password, 
      age)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER})
  </insert> -->
  <insert id="insertSelective" parameterType="com.javen.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="age != null" >
        age,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.javen.model.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.javen.model.User" >
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>